<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coco.core.dept.DeptDao">
    <resultMap type="DeptBean" id="deptResult">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="levelCode" column="levelCode"/>
        <result property="levelNum" column="levelNum"/>
        <result property="parentId" column="parentId"/>
        <result property="deptType" column="deptType"/>
        <result property="status" column="status"/>
        <result property="stopInfo" column="stopInfo"/>
        <result property="note" column="note"/>
        <result property="version" column="version"/>
        <result property="lastTime" column="last_Time"/>
    </resultMap>

    <select id="findAll" resultMap="deptResult">
		select * from SYS_DEPT
 	</select>

    <select id="findById" parameterType="String" resultMap="deptResult">
		select * from SYS_DEPT where id=#{id}
 	</select>

    <select id="findIdByContent" parameterType="String" resultMap="deptResult">
		select * from SYS_DEPT where 1=1
		and ((upper(F_PINYIN(code)) like  '%'||upper(#{txt})|| '%'
                    or upper(code) like  '%'||upper(#{txt})|| '%')
                    or (upper(F_PINYIN(name)) like  '%'||upper(#{txt})|| '%'
                    or upper(name) like  '%'||upper(#{txt})|| '%'))
                    and rownum=1
 	</select>

    <select id="findList" parameterType="Map" resultMap="deptResult">
		select * from SYS_DEPT where 1=1
        <trim  suffixOverrides="AND | OR">
            <if test="ids != null ">
                AND id in
                <foreach collection="ids" item="i_id" index="i_num"  open="(" separator="," close=")">
                    #{i_id}
                </foreach>
            </if>
            <if test="code != null and code !='' ">
                AND code like '%'||#{code}||'%'
            </if>
            <if test="_levelCodes != null">
                <foreach collection="_levelCodes" item="i_code" index="i_num"  open="and (" separator=" OR " close=" ) ">
                    (instr(#{i_code},levelCode)>0  or instr(levelCode,#{i_code})>0)
                </foreach>
            </if>
            <if test="name != null and name !=''">
                AND name like  '%'||#{name}||'%'
            </if>
            <if test="levelCodeChild != null and levelCodeChild !=''">
                AND instr('-'||levelCode||'-','-'||#{levelCodeChild}||'-')>0
            </if>
            <if test="oneDeptSelect != null and oneDeptSelect !='' ">
                and
                ((#{oneDeptSelect}='1'  AND id = #{dept})
                or (#{oneDeptSelect}='0'
                AND INSTR(#{levelCodeSeparator}||LEVELCODE||#{levelCodeSeparator},#{levelCodeSeparator}||#{dept}||#{levelCodeSeparator})>0 ))
            </if>
            <if test="parentId != null and parentId !=''">
                AND parentId = #{parentId}
            </if>
            <if test="status != null and status !=''  and status !='-'">
                AND status = #{status}
            </if>
            <if test="_list != null">
                <foreach collection="_list" item="listMap" index="i_num"  open="and (" separator=" OR " close=" ) ">
                    (upper(F_PINYIN(${listMap.text})) like  '%'||#{listMap.value}|| '%'
                    or upper(${listMap.text}) like  '%'||#{listMap.value}|| '%')
                </foreach>
            </if>
            <if test="strOrder != null and strOrder !=''">
                ORDER BY ${strOrder}
            </if>
            <if test="strOrder == null || strOrder ==''">
                ORDER BY LEVELNUM,CODE,ID
            </if>
        </trim>
 	</select>

    <select id="findListNum" parameterType="Map" resultType="Integer">
        select count(1) from SYS_DEPT where 1=1
        <trim  suffixOverrides="AND | OR">
            <if test="code != null and code !='' ">
                AND code like '%'||#{code}||'%'
            </if>
            <if test="name != null and name !=''">
                AND name like  '%'||#{name}||'%'
            </if>
            <if test="parentId != null and parentId !=''">
                AND parentId = #{parentId}
            </if>
            <if test="status != null and status !=''  and status !='-'">
                AND status = #{status}
            </if>
            <if test="strOrder != null and strOrder !=''">
                ORDER BY ${strOrder}
            </if>
            <if test="strOrder == null || strOrder ==''">
                ORDER BY LEVELNUM,CODE,ID
            </if>
        </trim>
    </select>

    <select id="getByCode" parameterType="String" resultMap="deptResult">
		select * from SYS_DEPT where code=#{code}
 	</select>

    <insert id="insert" parameterType="deptBean">
	 <![CDATA[
		insert into
		SYS_DEPT(id,code,name,levelCode,levelNum,parentId,deptType,status,stopInfo,stopTime,note,version,LAST_TIME)
        values(#{id},#{code},#{name},#{levelCode},#{levelNum},#{parentId},#{deptType},#{status},
        #{stopInfo},#{stopTime},#{note},#{version},#{lastTime})
        ]]>
 	</insert>

    <update id="update" parameterType="deptBean">
		update SYS_DEPT set code= #{code},
		name=#{name},levelCode=#{levelCode},levelNum=#{levelNum},
		parentId=#{parentId},deptType=#{deptType},status=#{status},
		stopInfo=#{stopInfo},note=#{note},version=#{version}+1,LAST_TIME=#{lastTime}
		where id=#{id} and  version=#{version}
 	</update>

    <delete id="delete" parameterType="int">
		delete from SYS_DEPT where
		id=#{id}
	</delete>

</mapper>
